

:lang: en
:encoding: iso-8859-1
\Sexpr{options(prompt=" ", continue=" ")}
\SweaveOpts{prefix.string=figs/05.1}


=== Using NatureServe ranges
==== http://www.natureserve.org

TIP: This script runs with
<<results=ascii, echo=false>>= 
sexpr(paste(version$version.string, "&", "rangeMapper", packageDescription("rangeMapper")$Version) )
@

TIP: Data provided by NatureServe in collaboration with 
Robert Ridgely, James Zook, The Nature Conservancy - Migratory Bird Program, 
Conservation International - CABS, World Wildlife Fund - US, and 
Environment Canada - WILDSPACE.
Ridgely, R. S., T. F. Allnutt, T. Brooks, D. K. McNicol, D. W. Mehlman, B. E. Young, and J. R. Zook. 2007. 
Digital Distribution Maps of the Birds of the Western Hemisphere, version 3.0. NatureServe, Arlington, Virginia, USA.


.# Start a project
<<results=hide>>=
require(rangeMapper)
dbcon = rangeMap.start(file = "wrens.sqlite", dir = tempdir() , overwrite = TRUE)
@

.# Download  range vector files
<<results=hide>>=
wd = setwd(tempdir())
download.file("http://www.natureserve.org/getData/dataSets/birdMapData/Falconidae.zip", "Falconidae.zip")
unzip("Falconidae.zip")
@

.# Combine all ranges in one "SpatialPolygonsDataFrame"
<<results=hide>>=
  R = list() # a container for all ranges

 lst = selectShpFiles("Falconidae")


 for(i in 1:nrow(lst)) {
		  ri = readOGR(lst$dsn[i], lst$layer[i], verbose = FALSE)
		  ri = spChFIDs(ri,  paste(i, 1:length(ri), sep = "." ) )
		  print(i)
		 R[[i]] = ri
 }	
	
R = do.call(rbind, R)

# see http://www.natureserve.org/getData/Metadata_Birds_ver_3.0_Oct_07.pdf
proj4string(R) = CRS("+proj=longlat +datum=NAD83") 

setwd(wd)
@


<<results=hide,fig=true>>=
plot(R, border = "grey", axes = TRUE)
@

<<results=ascii>>=
# Check out the field names
print(names(R))
@


.# Mapping species richness 

<<results=hide,fig=true>>=
global.bbox.save(con = dbcon, bbox = R) 
gridSize.save(dbcon) 
canvas.save(dbcon) 
processRanges(spdf = R, con =  dbcon, ID = "SCI_NAME")
rangeMap.save(dbcon) 
sr = rangeMap.fetch(dbcon) 
plot(sr) 
@

<<results=ascii, echo=false>>=
s = paste("_Website built with ", version$version.string, 
		" and the package ", dQuote(packageDescription("ascii")$Package), " version ", packageDescription("ascii")$Version, "_", sep = "")
ascii(s, style = 'm', grid = 'none',width = 0,frame = "none")
@

































